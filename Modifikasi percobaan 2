#include <cstdlib>
#include <iostream>
#include <string>

using namespace std;

struct Mahasiswa {
    string NIM;
    string NAMA;
    double IPK;
};

struct node {
    // bagian data
    Mahasiswa data;
    // pointer ke node selanjutnya
    struct node *next;
};
typedef struct node node;
node *head, *tail;

void AddLast(Mahasiswa item) { // Add Node After Tail
    struct node *pNew;
    pNew = (node *) malloc(sizeof(node));
    pNew->data = item;
    if (head == NULL) {
        head = pNew;
    }
    else {
        tail->next = pNew;
    }
    tail = pNew;
}

void AddFirst(Mahasiswa item) { // Add Node Before Head
    struct node *pNew;
    pNew = (node *) malloc(sizeof(node));
    pNew->data = item;
    if (head == NULL) {
        tail = pNew;
    }
    else {
        pNew->next = head;
    }
    head = pNew;
}

void Sorted (Mahasiswa item) { // Add Node Sorted by IPK
    struct node *pNew, *pCur, *pPrev;
    pNew = (node *) malloc(sizeof(node));
    pNew->data = item;
    pPrev = NULL;
    pCur = head;
    while (pCur != NULL && pCur->data.IPK > item.IPK) {
        pPrev = pCur;
        pCur = pCur->next;
    }
    if (pPrev == NULL) {
        AddFirst(item);
    }
    else if (pCur == NULL) {
        AddLast(item);
    }
    else {
        pNew->next = pCur;
        pPrev->next = pNew;
    }
}

void DisplayList(){
    struct node *temp = head;
    while (temp != NULL){
        cout << "NIM : " << temp->data.NIM << endl;
		cout << "NAMA : " << temp->data.NAMA << endl;
		cout << "IPK : " << temp->data.IPK << endl;
		cout << endl;
        temp = temp->next;
    }
	
	cout << endl;
}


int main() {
	
	head = NULL;
	tail = NULL;
	
	Mahasiswa mhs [7]=  {
		{"225150007", "Erlinda", 4.00},
    	{"225150008", "Abdul", 3.72},
    	{"225150009", "Reyhan", 3.90},
    	{"225150010", "Dirgantara", 3.97},
    	{"225150011", "Adawiyah", 3.58},
    	{"225150012", "Nastiti", 3.66},
    	{"225150013", "Burhan", 3.62}
	};
	
	for (int i = 0; i < 7; i++){
		Sorted(mhs[i]);
	}
   
    
    cout << "Urutan IPK dari yang Tertinggi -> Terendah: " << endl << endl;
    DisplayList();

  
    return EXIT_SUCCESS;
}
